name: citra-ci

on:
  push:
    branches: [ "*" ]
    tags: [ "*" ]
  pull_request:
    branches: [ vulkan ]

jobs:
  # clang-format:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: citraemu/build-environments:linux-fresh
  #     options: -u 1001
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Build
  #       env:
  #         COMMIT_RANGE: ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
  #       run: ./.ci/clang-format.sh
  source:
    if: ${{ !github.head_ref }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Pack
        run: ./.ci/source.sh
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: source
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: ["msvc"]
    defaults:
      run:
        shell: ${{ (matrix.target == 'msys2' && 'msys2') || 'bash' }} {0}
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      OS: windows
      TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install extra tools (MSVC)
        run: choco install ccache ninja wget
      - name: Set up Vulkan SDK (MSVC)
        uses: humbletim/setup-vulkan-sdk@v1.2.1
        with:
          vulkan-query-version: 1.4.304.1
          vulkan-components: SPIRV-Tools, Glslang
          vulkan-use-cache: true
      - name: Test glslang
        run: glslang --version || glslangValidator --version
      - name: Disable line ending translation
        run: git config --global core.autocrlf input
      - name: Build
        run: ./.ci/windows.sh
      - name: Pack
        run: ./.ci/pack.sh
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OS }}-${{ env.TARGET }}
          path: artifacts/
  # transifex:
  #   runs-on: ubuntu-latest
  #   container: citraemu/build-environments:linux-fresh
  #   if: ${{ github.repository == 'citra-emu/citra' && !github.head_ref }}
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #         fetch-depth: 0
  #     - name: Update Translation
  #       run: ./.ci/transifex.sh
  #       env:
  #         TX_TOKEN: ${{ secrets.TRANSIFEX_API_TOKEN }}
  release:
    runs-on: ubuntu-latest
    needs: [windows, source]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/download-artifact@v4
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload artifacts
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./**/*.tar.*","./**/*.AppImage","./**/*.7z","./**/*.zip","./**/*.apk","./**/*.aab"]'
